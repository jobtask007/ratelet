// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package mocks

import (
	"ratelet/internal/oxr"

	mock "github.com/stretchr/testify/mock"
)

// NewMockOxrClient creates a new instance of MockOxrClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOxrClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOxrClient {
	mock := &MockOxrClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockOxrClient is an autogenerated mock type for the OxrClient type
type MockOxrClient struct {
	mock.Mock
}

type MockOxrClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockOxrClient) EXPECT() *MockOxrClient_Expecter {
	return &MockOxrClient_Expecter{mock: &_m.Mock}
}

// GetRates provides a mock function for the type MockOxrClient
func (_mock *MockOxrClient) GetRates(currencies []string) (oxr.RatesResponse, error) {
	ret := _mock.Called(currencies)

	if len(ret) == 0 {
		panic("no return value specified for GetRates")
	}

	var r0 oxr.RatesResponse
	var r1 error
	if returnFunc, ok := ret.Get(0).(func([]string) (oxr.RatesResponse, error)); ok {
		return returnFunc(currencies)
	}
	if returnFunc, ok := ret.Get(0).(func([]string) oxr.RatesResponse); ok {
		r0 = returnFunc(currencies)
	} else {
		r0 = ret.Get(0).(oxr.RatesResponse)
	}
	if returnFunc, ok := ret.Get(1).(func([]string) error); ok {
		r1 = returnFunc(currencies)
	} else {
		r1 = ret.Error(1)
	}
	return r0, r1
}

// MockOxrClient_GetRates_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRates'
type MockOxrClient_GetRates_Call struct {
	*mock.Call
}

// GetRates is a helper method to define mock.On call
//   - currencies
func (_e *MockOxrClient_Expecter) GetRates(currencies interface{}) *MockOxrClient_GetRates_Call {
	return &MockOxrClient_GetRates_Call{Call: _e.mock.On("GetRates", currencies)}
}

func (_c *MockOxrClient_GetRates_Call) Run(run func(currencies []string)) *MockOxrClient_GetRates_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]string))
	})
	return _c
}

func (_c *MockOxrClient_GetRates_Call) Return(ratesResponse oxr.RatesResponse, err error) *MockOxrClient_GetRates_Call {
	_c.Call.Return(ratesResponse, err)
	return _c
}

func (_c *MockOxrClient_GetRates_Call) RunAndReturn(run func(currencies []string) (oxr.RatesResponse, error)) *MockOxrClient_GetRates_Call {
	_c.Call.Return(run)
	return _c
}
